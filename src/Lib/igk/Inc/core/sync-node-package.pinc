<?php
//

 
if (!class_exists('Logger')){
    abstract class Logger{
        static function __callStatic($name, $arguments){
        }
        public static function danger($msg){
            $response = new InstallerResponse(); 
            $response->die($msg);
        }
    }
}
if (basename(__FILE__)!='sync-node-package.pinc'){
    unlink(__FILE__);
}
$command = (object)['options'=>[]];
$args = igk_getr('args');

ini_set('display_errors',1);
error_reporting(-1);
 
if (!$args){
    Logger::danger("missing args::::");
    $response->die('missing args.');
}
 
$search = 'which';
if (PHP_OS != 'Linux'){
    $search = 'where';
}
ini_set("max_execution_time", 0); 
if (in_array($c = $args[0], ['yarn', 'npm', 'exec'])){
    if ($c=='exec'){
        $g = implode(' ', array_slice($args, 1));
        $ret = `{$g} 1>&1 2>&1` ;              
        $response->response(json_encode(['message'=>'exec', 'cmd'=>$g, 'ret'=>$ret], JSON_UNESCAPED_SLASHES));
        return;
    }
    $cmd = `{$search} {$c}`;
    if (empty($cmd)){        
        $response->die('missing : '.$c);
    }
    $cmd .= implode(" ", array_slice($args, 1));
} else if ($yarn = `{$search} yarn`){
    $cmd = $yarn .' ' .implode(" ", $args);
} else if($npm = `{$search} npm` ) {
    $cmd = $npm .' '.implode(" ", $args);
} else {
    echo "end ....";
    Logger::danger("missing yarn or npm");        
    return -1;
}
//  echo "cmd : ".$cmd;


// if (property_exists($command->options, '--version')){
//     $shell_command[] = '--version';
// }
// if (empty($shell_command = implode(' ', $shell_command))){
//     Logger::danger('shell command require');
// }
// if ($o =  OsShell::ExecInWorkingDir( $cmd .' '.$shell_command." 1>&2 2>&2", igk_io_packagesdir() , $success=$this->command.'-complete')){
//     if (igk_str_endwith($o, $success)){
//         $o = igk_str_rm_last($o, $success);
//     }
//     Logger::print($o);
// }
$g = $c =  null; 

$response->response(json_encode([
    'script'=>__FILE__,
    'os'=>PHP_OS,
    "version"=>PHP_VERSION,
    "data"=>$g,
    "ob-data"=>$c, 
    "cmd"=>$cmd    
], JSON_UNESCAPED_SLASHES));
exit;

