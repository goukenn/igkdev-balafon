<?php
// @author: C.A.D. BONDJE DOUE
// @filename: igk_db_ctrl_resetdb.pinc
// @date: 20220803 13:51:47
// @desc: reset database script


use IGK\System\Console\Logger;
use IGK\Controllers\BaseController;
use IGK\Controllers\RootControllerBase;

// + | --------------------------------------------------------------------
// + | RESET DATABASE
// + |



/**
 * @var BaseController $controller 
 */
$funcName = RootControllerBase::MACRO_RESETDB_METHOD;
$s_iscmd = igk_is_cmd();
$s_d = igk_app_is_uri_demand($controller, $funcName) || $s_iscmd;
$s = $force || $s_iscmd || igk_is_conf_connected() || $controller::IsUserAllowedTo($controller->getName() . ":" . $funcName);
if (!$s_d) {
    if (!$s) {
        igk_notifyctrl()->addError("Operation not allowed");
        if ($navigate) {
            igk_navto($controller->getAppUri());
        }
        return -1;
    }
}
if (!$s) {
    if ($s_d && $navigate) {
        igk_navto($controller->getAppUri());
    }
    Logger::danger("failed to resetdb");
    return -2;
}
$controller::register_autoload();
$deflog = igk_environment()->get(__FILE__);
$db = igk_get_data_adapter($controller);

$is_connect = $db->isConnect();
if ($deflog === null) {
    Logger::print("db-name: " . igk_configs()->db_name);
    Logger::print("db-server: " . igk_configs()->db_server);
    Logger::print("dropdb ... " . ($force ? "--force" : ""));
    Logger::print("dataadapter: " . $controller->getDataAdapterName());
    Logger::print("isconnect: " . $is_connect);
    Logger::print("name: " . get_class($db));
    igk_environment()->set(__FILE__, 1);
} else {
    $deflog++;
}

if (!$is_connect) {
    Logger::danger('driver not connected');
    // return false;
}

$controller->dropDb(false, $force);
igk_set_env("sys://db_init_table/ctrl", $controller);
Logger::info("init controller db ... ");
$controller->initDb($force, $clean);
if ($deflog > 0) {
    $deflog--;
}
igk_hook(IGK_HOOK_DB_CHANGED, $controller, null);
if ($navigate) {
    $controller::logout(0);
}
if (!igk_is_cmd()) {
    if ($force || igk_uri_is_match(igk_io_currentUri(), $controller->getAppUri($funcName))) {
        if ($navigate) {
            igk_navto($controller->getAppUri());
        }
        return true;
    } else {
        igk_dev_wln_e(
            "resetDb : no matching uri ",
            "appuri : " . $controller->getAppUri($funcName),
            "currenturi: " . igk_io_currentUri()
        );
    }
}
return true;
