<?php

use IGK\System\Console\Logger;

$funcName = "resetDb";
$s_d= igk_app_is_uri_demand($controller, $funcName);
$s = $force || igk_is_conf_connected() || $controller::IsUserAllowedTo($controller->Name.":".$funcName);
 
if(!$s_d){
    if(!$s){
        igk_notifyctrl()->addError("Operation not allowed");
       
        if ($navigate)
         igk_navto($controller->getAppUri());
        return;
    }
} 
if(!$s){
    if($s_d && $navigate){
        igk_navto($controller->getAppUri());
    }
    return;
}  
// Logger::print("dropdb");
$controller::dropDb($navigate, $force); 
$ad=igk_get_data_adapter($controller);
$ad->initForInitDb();
igk_set_env("sys://db_init_table/ctrl", $controller);
$controller::initDb($force);

$ad->flushForInitDb();
igk_hook(IGKEvents::HOOK_DB_INIT_ENTRIES, array($controller));
igk_hook(IGKEvents::HOOK_DB_INIT_COMPLETE, ["controller"=>$controller]);
if ($navigate){
    $controller::logout(0);
} 
if($force || igk_uri_is_match(igk_io_currentUri(), $controller->getAppUri($funcName))){
    igk_notification_push_event(IGK_HOOK_DB_CHANGED, $controller, null);
    if($navigate){
        igk_navto($controller->getAppUri());
    }
}
else{
    igk_wln_e("no matching.... uri "
    , "appuri : ".$controller->getAppUri($funcName)
    , "currenturi: ".igk_io_currentUri()); 
}